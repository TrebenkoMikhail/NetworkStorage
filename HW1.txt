1.Для организации клиентно-серверного взаимодействия необходимо создать:
1) Однопоточный элементарный сервер.
2) Клиент.
3) Многопоточный сервер – сам по себе этот сервер не участвует в общении напрямую, а лишь является фабрикой однонитевых делегатов(делегированных для ведения диалога с клиентами серверов) для общения с вновь подключившимися клиентами, которые закрываются после окончания общения с клиентом.
4) Имитация множественного обращения клиентов к серверу.
https://www.youtube.com/watch?v=p4pcmecluHE

2. Нужно передать файл любого размера через сокет, желательно чтобы к этому возможно было прикрутить прогрессбар. (Интересуют именно файлы, сокет вполне работает, и к моменту передачи клиент и сервер готовы отдавать/принимать файл)

3. Большие файлы лучше дробить на части и передавать кусками.

4. В нашем случае (на самом деле Вы не полностью специфицировали свою задачу), видимо самым простым будет обмен строками с текстом. 
Связываем tcp сокет с потоком ввода-вывода и гоняете строки. В каждой команда и соответствующие данные. Полностью аналогично вводу-выводу с терминала. Ещё к avp на всякий случай использовать спецсимволы для разделения строк (сообщений) между собой.

5. Есть много способов сделать это, здесь несколько:
-Использовать базу данных SQLite (рекомендуется).
-Преобразуйте свои объекты в XML (Xstream) и сохраните их как файлы XML.
-Сериализовать ваши объекты данных и сохранить их в файле. 

6. Класс File пакета java.io используется для управления информацией о файлах и каталогах. На уровне операционной системы файлы и каталоги имеют существенные отличия, но в Java они описываются одним классом File. Каталог в Java трактуется как обычный файл, но с дополнительным свойством — списком имен файлов, который можно просмотреть с помощью метода list.
В зависимости от назначения объект File - файл или каталог, можно использовать один из конструкторов для создания объекта:
File (String путь_к_каталогу);
File (String путь_к_каталогу, String имя_файла);
File (File каталог, String имя_файла);

7. Библиотека Netty, структура которой показалась просто идеально подходящей для того, чтобы встроить её в уже готовое работающее решение. К сожалению, мануалов по Netty мало не только на русском, но и на английском языках, поэтому приходилось много экспериментировать и лазить в код библиотеки, чтобы найти лучший способ.